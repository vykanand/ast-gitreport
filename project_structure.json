{
  "name": "root",
  "children": [
    {
      "name": ".gitignore",
      "type": "file",
      "path": "temp-repo/selfhealjs/.gitignore",
      "contents": "\"# Dependencies\\nnode_modules/\\n\\n# Environment files\\n.env\\n.env.local\\n.env.development.local\\n.env.test.local\\n.env.production.local\\n\\n# OS generated files\\n.DS_Store\\nThumbs.db\\n\\n# Logs\\n*.log\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\n\\n# Build outputs\\n/build\\n/dist\\n\\n# IDE specific files\\n.vscode/\\n.idea/\\n*.sublime-project\\n*.sublime-workspace\\n\\n# Temporary files\\n*.tmp\\n*.swp\\n*.swo\\n\\n# Optional: Add project-specific ignores below\\n\""
    },
    {
      "name": "app.js",
      "type": "file",
      "path": "temp-repo/selfhealjs/app.js",
      "contents": "\"const { helpFn } = require('./ukm/yt');\\n\\nfunction add(a, b) {\\n    return a + b;\\n}\\n\\nfunction subtract(a, b) {\\n    return a - b;\\n}\\n\\nconsole.log(add(5, 3));\\nconsole.log(subtract(5, 2));\\nconsole.log(subtract(15, 2));\\nconsole.log(helpFn(\\\"hello\\\", \\\"world\\\"))\\nconsole.log(add(4, 3));\""
    },
    {
      "name": "appmap.yml",
      "type": "file",
      "path": "temp-repo/selfhealjs/appmap.yml",
      "contents": "\"name: selfHeal project\\nlanguage: javascript\\nappmap_dir: ./\\npackages:\\n  - path: .\\n    exclude:\\n      - node_modules\\n      - .yarn\\n      - .git\\n\""
    },
    {
      "name": "ast.js",
      "type": "file",
      "path": "temp-repo/selfhealjs/ast.js",
      "contents": "\"const fs = require('fs');\\nconst path = require('path');\\nconst parser = require('@babel/parser');\\nconst traverse = require('@babel/traverse').default;\\nconst { GoogleGenerativeAI } = require('@google/generative-ai');\\n\\n// List of API keys\\nconst apiKeys = [\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyDuMVRujmPygn0g1QxI-a8CUEZ9gu-Q778',\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyD-yA6Mg6tLYaRLFwmfis2g41-ONx-lSzc'\\n];\\n\\nlet currentKeyIndex = 0;\\n\\n// Function to get the next API key\\nconst getNextApiKey = () => {\\n    currentKeyIndex = (currentKeyIndex + 1) % apiKeys.length;\\n    return apiKeys[currentKeyIndex];\\n};\\n\\n// Function to ask AI for analysis\\nasync function askAI(question) {\\n    const apiKey = getNextApiKey();\\n    const genAI = new GoogleGenerativeAI(apiKey);\\n    const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\\n    const chat = model.startChat();\\n\\n    console.log('Asking AI...');\\n    try {\\n        const result = await chat.sendMessage(question);\\n        if (typeof result.response.text === 'function') {\\n            return await result.response.text();\\n        } else {\\n            throw new Error('Unexpected response format.');\\n        }\\n    } catch (error) {\\n        console.error(`Error with API key ${apiKey}:`, error.message);\\n    }\\n}\\n\\nconst projectPath = './'; // Change this to your project directory\\n\\nfunction analyzeProject(directory) {\\n    const classes = [];\\n    const dependencies = [];\\n\\n    // Recursively read files in the directory\\n    function readFiles(dir) {\\n        console.log(`Reading directory: ${dir}`); // Debugging\\n        fs.readdirSync(dir).forEach(file => {\\n            const fullPath = path.join(dir, file);\\n            const stat = fs.statSync(fullPath);\\n            if (stat.isDirectory()) {\\n                if (!isIgnoredDirectory(fullPath)) { // Ignore specific directories\\n                    readFiles(fullPath); // Recurse into subdirectories\\n                } else {\\n                    console.log(`Ignoring directory: ${fullPath}`); // Debugging\\n                }\\n            } else if (file.endsWith('.js') && !isIgnoredFile(fullPath)) {\\n                console.log(`Analyzing file: ${fullPath}`); // Debugging\\n                analyzeFile(fullPath, classes, dependencies);\\n            }\\n        });\\n    }\\n\\n    readFiles(directory);\\n    return { classes, dependencies };\\n}\\n\\n// Function to check if a directory should be ignored\\nfunction isIgnoredDirectory(dir) {\\n    const ignoredDirs = ['node_modules', '.git'];\\n    return ignoredDirs.some(ignored => dir.includes(`/${ignored}`) || dir.includes(`\\\\\\\\${ignored}`));\\n}\\n\\n// Function to check if a file should be ignored\\nfunction isIgnoredFile(filePath) {\\n    return filePath.includes('node_modules') || filePath.includes('.git');\\n}\\n\\nfunction analyzeFile(filePath, classes, dependencies) {\\n    const code = fs.readFileSync(filePath, 'utf8');\\n    try {\\n        const ast = parser.parse(code, { sourceType: 'module' });\\n\\n        // Log the AST for inspection\\n        console.log(`AST for ${filePath}:`, JSON.stringify(ast, null, 2)); // Debugging\\n\\n        traverse(ast, {\\n            ClassDeclaration(path) {\\n                const className = path.node.id.name;\\n                classes.push(className);\\n                // Find dependencies\\n                path.traverse({\\n                    CallExpression(callPath) {\\n                        if (callPath.node.callee.name) {\\n                            dependencies.push({\\n                                className,\\n                                method: callPath.node.callee.name,\\n                                file: filePath,\\n                            });\\n                        }\\n                    },\\n                });\\n            },\\n        });\\n    } catch (error) {\\n        console.error(`Error parsing file ${filePath}:`, error.message); // Error logging\\n    }\\n}\\n\\nfunction generatePrompt(classes, dependencies) {\\n    let prompt = `### Project Analysis for SOLID Principles Refactoring\\\\n\\\\n`;\\n    prompt += `Classes found:\\\\n- ${classes.join('\\\\n- ')}\\\\n\\\\n`;\\n    prompt += `Dependencies:\\\\n`;\\n    dependencies.forEach(dep => {\\n        prompt += `- Class: ${dep.className} calls method: ${dep.method} in file: ${dep.file}\\\\n`;\\n    });\\n    prompt += `\\\\n### Please analyze the above classes and their dependencies against the SOLID principles and provide refactoring suggestions.`;\\n    return prompt;\\n}\\n\\nasync function main() {\\n    const { classes, dependencies } = analyzeProject(projectPath);\\n    const prompt = generatePrompt(classes, dependencies);\\n    \\n    console.log(prompt); // Log the generated prompt\\n    if (classes.length === 0 && dependencies.length === 0) {\\n        console.log('No classes or dependencies found.'); // Debugging\\n    } else {\\n        const aiResponse = await askAI(prompt); // Ask AI with the generated prompt\\n        console.log(`\\\\n--- AI Response ---\\\\n`);\\n        console.log(aiResponse);\\n    }\\n}\\n\\nmain();\\n\""
    },
    {
      "name": "heal2.js",
      "type": "file",
      "path": "temp-repo/selfhealjs/heal2.js",
      "contents": "\"import { GoogleGenerativeAI } from '@google/generative-ai';\\nimport fs from 'fs';\\nimport { exec } from 'child_process';\\nimport acorn from 'acorn';\\nimport walk from 'acorn-walk';\\nimport readline from 'readline';\\n\\n// Array of API keys to rotate\\nconst apiKeys = [\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyDuMVRujmPygn0g1QxI-a8CUEZ9gu-Q778',\\n    'AIzaSyCprWxBmsoxPDcA0OTsYGOOtYVd_51J5po',\\n    'AIzaSyD-yA6Mg6tLYaRLFwmfis2g41-ONx-lSzc'\\n];\\n\\nlet currentKeyIndex = 0;\\n\\nconst getNextApiKey = () => {\\n    currentKeyIndex = (currentKeyIndex + 1) % apiKeys.length;\\n    return apiKeys[currentKeyIndex];\\n};\\n\\nclass AIAgent {\\n    constructor() {\\n        this.instructions = [];\\n    }\\n\\n    async run(instruction) {\\n        this.instructions = this.receiveInstructions(instruction);\\n        for (let step of this.instructions) {\\n            console.log(`Executing: ${step}`);\\n            await this.executeStep(step);\\n        }\\n        \\n        // Ask for the command to run for debugging\\n        const command = await this.askForRunCommand();\\n        await this.iterativeDebugging(command);\\n    }\\n\\n    receiveInstructions(instruction) {\\n        return instruction.split('.').map(step => step.trim()).filter(step => step);\\n    }\\n\\n    async executeStep(step) {\\n        if (step.startsWith('Create')) {\\n            const code = `\\nfunction add(a, b) {\\n    return a + b;\\n}\\nmodule.exports = add;\\n`;\\n            fs.writeFileSync('add.js', code);\\n        }\\n    }\\n\\n    async askForRunCommand() {\\n        const rl = readline.createInterface({\\n            input: process.stdin,\\n            output: process.stdout\\n        });\\n\\n        return new Promise(resolve => {\\n            rl.question('Enter the command to run (e.g., npm start or npm test): ', (answer) => {\\n                rl.close();\\n                resolve(answer);\\n            });\\n        });\\n    }\\n\\n    async iterativeDebugging(command) {\\n        let error;\\n        do {\\n            error = await this.runCommand(command);\\n            if (error) {\\n                console.log(`Error found: ${error}`);\\n                const analysis = await this.analyzeError(error);\\n                console.log(`Analysis: ${analysis}`);\\n                await this.applyFix(analysis);\\n            }\\n        } while (error);\\n    }\\n\\n    runCommand(command) {\\n        return new Promise((resolve) => {\\n            exec(command, { cwd: '../' }, (error, stdout, stderr) => {\\n                console.log(stdout);\\n                if (error) {\\n                    resolve(stderr);\\n                } else {\\n                    resolve(null);\\n                }\\n            });\\n        });\\n    }\\n\\n    async analyzeError(error) {\\n        const apiKey = getNextApiKey();\\n        console.log(`Using API key: ${apiKey}`);\\n        const genAI = new GoogleGenerativeAI(apiKey);\\n\\n        try {\\n            const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\\n            const chat = model.startChat();\\n            const result = await chat.sendMessage(`Debug the following error: ${error}`);\\n\\n            if (result && result.response && result.response.text) {\\n                return result.response.text.trim();\\n            } else {\\n                throw new Error('Unexpected response format from LLM.');\\n            }\\n        } catch (err) {\\n            console.error(`Error communicating with LLM: ${err.message}`);\\n            return null;\\n        }\\n    }\\n\\n    async applyFix(analysis) {\\n        console.log(`Applying fix: ${analysis}`);\\n        // Implement logic to modify the code based on the analysis\\n        // This is a placeholder for where you'd apply fixes\\n    }\\n}\\n\\n// Running the agent\\nconst agent = new AIAgent();\\nconst instruction = \\\"Create a function to add two numbers.\\\"; // Instructions can be modified as needed\\nagent.run(instruction);\\n\\n\""
    },
    {
      "name": "models",
      "type": "directory",
      "children": [
        {
          "name": "Customer.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/models/Customer.js",
          "contents": "\"class Customer {\\n    constructor(id, name, email) {\\n        this.id = id;\\n        this.name = name;\\n        this.email = email;\\n    }\\n\\n    getContactInfo() {\\n        return `Customer [ID: ${this.id}, Name: ${this.name}, Email: ${this.email}]`;\\n    }\\n}\\n\\nmodule.exports = Customer;\\n\""
        },
        {
          "name": "Order.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/models/Order.js",
          "contents": "\"class Order {\\n    constructor(orderId, customer, products = []) {\\n        this.orderId = orderId;\\n        this.customer = customer;\\n        this.products = products;\\n    }\\n\\n    addProduct(product) {\\n        this.products.push(product);\\n    }\\n\\n    getOrderSummary() {\\n        const productNames = this.products.map(p => p.name).join(', ');\\n        return `Order [ID: ${this.orderId}, Customer: ${this.customer.name}, Products: [${productNames}]]`;\\n    }\\n}\\n\\nmodule.exports = Order;\\n\""
        },
        {
          "name": "Product.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/models/Product.js",
          "contents": "\"class Product {\\n    constructor(id, name, price) {\\n        this.id = id;\\n        this.name = name;\\n        this.price = price;\\n    }\\n\\n    getDetails() {\\n        return `Product [ID: ${this.id}, Name: ${this.name}, Price: $${this.price}]`;\\n    }\\n}\\n\\nmodule.exports = Product;\\n\""
        }
      ]
    },
    {
      "name": "package-lock.json",
      "type": "file",
      "path": "temp-repo/selfhealjs/package-lock.json",
      "contents": "\"{\\n  \\\"name\\\": \\\"self-healing-program\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"lockfileVersion\\\": 3,\\n  \\\"requires\\\": true,\\n  \\\"packages\\\": {\\n    \\\"\\\": {\\n      \\\"name\\\": \\\"self-healing-program\\\",\\n      \\\"version\\\": \\\"1.0.0\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/generator\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/parser\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/traverse\\\": \\\"^7.25.7\\\",\\n        \\\"@google/generative-ai\\\": \\\"^0.21.0\\\",\\n        \\\"axios\\\": \\\"^1.7.7\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/code-frame\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-0xZJFNE5XMpENsgfHYTw8FbX4kv53mFLn2i3XPoq69LyhYSCBJtitaHx9QnsVTrsogI4Z3+HtEfZ2/GFPOtf5g==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/highlight\\\": \\\"^7.25.7\\\",\\n        \\\"picocolors\\\": \\\"^1.0.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/generator\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/generator/-/generator-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-5Dqpl5fyV9pIAD62yK9P7fcA768uVPUyrQmqpqstHWgMma4feF1x/oFysBCVZLY5wJ2GkMUCdsNDnGZrPoR6rA==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/types\\\": \\\"^7.25.7\\\",\\n        \\\"@jridgewell/gen-mapping\\\": \\\"^0.3.5\\\",\\n        \\\"@jridgewell/trace-mapping\\\": \\\"^0.3.25\\\",\\n        \\\"jsesc\\\": \\\"^3.0.2\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/helper-string-parser\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-CbkjYdsJNHFk8uqpEkpCvRs3YRp9tY6FmFY7wLMSYuGYkrdUi7r2lc4/wqsvlHoMznX3WJ9IP8giGPq68T/Y6g==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/helper-validator-identifier\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-AM6TzwYqGChO45oiuPqwL2t20/HdMC1rTPAesnBCgPCSF1x3oN9MVUwQV2iyz4xqWrctwK5RNC8LV22kaQCNYg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/highlight\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/highlight/-/highlight-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-iYyACpW3iW8Fw+ZybQK+drQre+ns/tKpXbNESfrhNnPLIklLbXr7MYJ6gPEd0iETGLOK+SxMjVvKb/ffmk+FEw==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/helper-validator-identifier\\\": \\\"^7.25.7\\\",\\n        \\\"chalk\\\": \\\"^2.4.2\\\",\\n        \\\"js-tokens\\\": \\\"^4.0.0\\\",\\n        \\\"picocolors\\\": \\\"^1.0.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/parser\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/parser/-/parser-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-aZn7ETtQsjjGG5HruveUK06cU3Hljuhd9Iojm4M8WWv3wLE6OkE5PWbDUkItmMgegmccaITudyuW5RPYrYlgWw==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/types\\\": \\\"^7.25.7\\\"\\n      },\\n      \\\"bin\\\": {\\n        \\\"parser\\\": \\\"bin/babel-parser.js\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.0.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/template\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/template/-/template-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-wRwtAgI3bAS+JGU2upWNL9lSlDcRCqD05BZ1n3X2ONLH1WilFP6O1otQjeMK/1g0pvYcXC7b/qVUB1keofjtZA==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/code-frame\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/parser\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/types\\\": \\\"^7.25.7\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/traverse\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/traverse/-/traverse-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-jatJPT1Zjqvh/1FyJs6qAHL+Dzb7sTb+xr7Q+gM1b+1oBsMsQQ4FkVKb6dFlJvLlVssqkRzV05Jzervt9yhnzg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/code-frame\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/generator\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/parser\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/template\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/types\\\": \\\"^7.25.7\\\",\\n        \\\"debug\\\": \\\"^4.3.1\\\",\\n        \\\"globals\\\": \\\"^11.1.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@babel/types\\\": {\\n      \\\"version\\\": \\\"7.25.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@babel/types/-/types-7.25.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-vwIVdXG+j+FOpkwqHRcBgHLYNL7XMkufrlaFvL9o6Ai9sJn9+PdyIL5qa0XzTZw084c+u9LOls53eoZWP/W5WQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@babel/helper-string-parser\\\": \\\"^7.25.7\\\",\\n        \\\"@babel/helper-validator-identifier\\\": \\\"^7.25.7\\\",\\n        \\\"to-fast-properties\\\": \\\"^2.0.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.9.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@google/generative-ai\\\": {\\n      \\\"version\\\": \\\"0.21.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@google/generative-ai/-/generative-ai-0.21.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-7XhUbtnlkSEZK15kN3t+tzIMxsbKm/dSkKBFalj+20NvPKe1kBY7mR2P7vuijEn+f06z5+A8bVGKO0v39cr6Wg==\\\",\\n      \\\"license\\\": \\\"Apache-2.0\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=18.0.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@jridgewell/gen-mapping\\\": {\\n      \\\"version\\\": \\\"0.3.5\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@jridgewell/set-array\\\": \\\"^1.2.1\\\",\\n        \\\"@jridgewell/sourcemap-codec\\\": \\\"^1.4.10\\\",\\n        \\\"@jridgewell/trace-mapping\\\": \\\"^0.3.24\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.0.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@jridgewell/resolve-uri\\\": {\\n      \\\"version\\\": \\\"3.1.2\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.0.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@jridgewell/set-array\\\": {\\n      \\\"version\\\": \\\"1.2.1\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.0.0\\\"\\n      }\\n    },\\n    \\\"node_modules/@jridgewell/sourcemap-codec\\\": {\\n      \\\"version\\\": \\\"1.5.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/@jridgewell/trace-mapping\\\": {\\n      \\\"version\\\": \\\"0.3.25\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"@jridgewell/resolve-uri\\\": \\\"^3.1.0\\\",\\n        \\\"@jridgewell/sourcemap-codec\\\": \\\"^1.4.14\\\"\\n      }\\n    },\\n    \\\"node_modules/ansi-styles\\\": {\\n      \\\"version\\\": \\\"3.2.1\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"color-convert\\\": \\\"^1.9.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    },\\n    \\\"node_modules/asynckit\\\": {\\n      \\\"version\\\": \\\"0.4.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/axios\\\": {\\n      \\\"version\\\": \\\"1.7.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/axios/-/axios-1.7.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-S4kL7XrjgBmvdGut0sN3yJxqYzrDOnivkBiN0OFs6hLiUam3UPvswUo0kqGyhqUZGEOytHyumEdXsAkgCOUf3Q==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"follow-redirects\\\": \\\"^1.15.6\\\",\\n        \\\"form-data\\\": \\\"^4.0.0\\\",\\n        \\\"proxy-from-env\\\": \\\"^1.1.0\\\"\\n      }\\n    },\\n    \\\"node_modules/chalk\\\": {\\n      \\\"version\\\": \\\"2.4.2\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"ansi-styles\\\": \\\"^3.2.1\\\",\\n        \\\"escape-string-regexp\\\": \\\"^1.0.5\\\",\\n        \\\"supports-color\\\": \\\"^5.3.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    },\\n    \\\"node_modules/color-convert\\\": {\\n      \\\"version\\\": \\\"1.9.3\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"color-name\\\": \\\"1.1.3\\\"\\n      }\\n    },\\n    \\\"node_modules/color-name\\\": {\\n      \\\"version\\\": \\\"1.1.3\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/combined-stream\\\": {\\n      \\\"version\\\": \\\"1.0.8\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"delayed-stream\\\": \\\"~1.0.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">= 0.8\\\"\\n      }\\n    },\\n    \\\"node_modules/debug\\\": {\\n      \\\"version\\\": \\\"4.3.7\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/debug/-/debug-4.3.7.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"ms\\\": \\\"^2.1.3\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6.0\\\"\\n      },\\n      \\\"peerDependenciesMeta\\\": {\\n        \\\"supports-color\\\": {\\n          \\\"optional\\\": true\\n        }\\n      }\\n    },\\n    \\\"node_modules/delayed-stream\\\": {\\n      \\\"version\\\": \\\"1.0.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=0.4.0\\\"\\n      }\\n    },\\n    \\\"node_modules/escape-string-regexp\\\": {\\n      \\\"version\\\": \\\"1.0.5\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=0.8.0\\\"\\n      }\\n    },\\n    \\\"node_modules/follow-redirects\\\": {\\n      \\\"version\\\": \\\"1.15.9\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==\\\",\\n      \\\"funding\\\": [\\n        {\\n          \\\"type\\\": \\\"individual\\\",\\n          \\\"url\\\": \\\"https://github.com/sponsors/RubenVerborgh\\\"\\n        }\\n      ],\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4.0\\\"\\n      },\\n      \\\"peerDependenciesMeta\\\": {\\n        \\\"debug\\\": {\\n          \\\"optional\\\": true\\n        }\\n      }\\n    },\\n    \\\"node_modules/form-data\\\": {\\n      \\\"version\\\": \\\"4.0.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/form-data/-/form-data-4.0.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-ETEklSGi5t0QMZuiXoA/Q6vcnxcLQP5vdugSpuAyi6SVGi2clPPp+xgEhuMaHC+zGgn31Kd235W35f7Hykkaww==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"asynckit\\\": \\\"^0.4.0\\\",\\n        \\\"combined-stream\\\": \\\"^1.0.8\\\",\\n        \\\"mime-types\\\": \\\"^2.1.12\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">= 6\\\"\\n      }\\n    },\\n    \\\"node_modules/globals\\\": {\\n      \\\"version\\\": \\\"11.12.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/globals/-/globals-11.12.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    },\\n    \\\"node_modules/has-flag\\\": {\\n      \\\"version\\\": \\\"3.0.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    },\\n    \\\"node_modules/js-tokens\\\": {\\n      \\\"version\\\": \\\"4.0.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/jsesc\\\": {\\n      \\\"version\\\": \\\"3.0.2\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"bin\\\": {\\n        \\\"jsesc\\\": \\\"bin/jsesc\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=6\\\"\\n      }\\n    },\\n    \\\"node_modules/mime-db\\\": {\\n      \\\"version\\\": \\\"1.52.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">= 0.6\\\"\\n      }\\n    },\\n    \\\"node_modules/mime-types\\\": {\\n      \\\"version\\\": \\\"2.1.35\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"mime-db\\\": \\\"1.52.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">= 0.6\\\"\\n      }\\n    },\\n    \\\"node_modules/ms\\\": {\\n      \\\"version\\\": \\\"2.1.3\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/picocolors\\\": {\\n      \\\"version\\\": \\\"1.1.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/picocolors/-/picocolors-1.1.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-TQ92mBOW0l3LeMeyLV6mzy/kWr8lkd/hp3mTg7wYK7zJhuBStmGMBG0BdeDZS/dZx1IukaX6Bk11zcln25o1Aw==\\\",\\n      \\\"license\\\": \\\"ISC\\\"\\n    },\\n    \\\"node_modules/proxy-from-env\\\": {\\n      \\\"version\\\": \\\"1.1.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==\\\",\\n      \\\"license\\\": \\\"MIT\\\"\\n    },\\n    \\\"node_modules/supports-color\\\": {\\n      \\\"version\\\": \\\"5.5.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"dependencies\\\": {\\n        \\\"has-flag\\\": \\\"^3.0.0\\\"\\n      },\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    },\\n    \\\"node_modules/to-fast-properties\\\": {\\n      \\\"version\\\": \\\"2.0.0\\\",\\n      \\\"resolved\\\": \\\"https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz\\\",\\n      \\\"integrity\\\": \\\"sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==\\\",\\n      \\\"license\\\": \\\"MIT\\\",\\n      \\\"engines\\\": {\\n        \\\"node\\\": \\\">=4\\\"\\n      }\\n    }\\n  }\\n}\\n\""
    },
    {
      "name": "package.json",
      "type": "file",
      "path": "temp-repo/selfhealjs/package.json",
      "contents": "\"{\\n  \\\"name\\\": \\\"self-healing-program\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"main\\\": \\\"index.js\\\",\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"node index.js\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"@babel/generator\\\": \\\"^7.25.7\\\",\\n    \\\"@babel/parser\\\": \\\"^7.25.7\\\",\\n    \\\"@babel/traverse\\\": \\\"^7.25.7\\\",\\n    \\\"@google/generative-ai\\\": \\\"^0.21.0\\\",\\n    \\\"axios\\\": \\\"^1.7.7\\\"\\n  }\\n}\\n\""
    },
    {
      "name": "process",
      "type": "directory",
      "children": [
        {
          "name": "2024-10-10T14-50-55.890Z",
          "type": "directory",
          "children": [
            {
              "name": "canonical.classDependencies.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.classDependencies.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.classes.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.classes.json",
              "contents": "\"[\\n  \\\"selfHeal project/app\\\",\\n  \\\"selfHeal project/ukm/yt\\\"\\n]\""
            },
            {
              "name": "canonical.exceptions.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.exceptions.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.httpClientRequests.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.httpClientRequests.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.httpServerRequests.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.httpServerRequests.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.labels.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.labels.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.packageDependencies.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.packageDependencies.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.packages.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.packages.json",
              "contents": "\"[\\n  \\\"selfHeal project\\\",\\n  \\\"selfHeal project/ukm\\\"\\n]\""
            },
            {
              "name": "canonical.parameters.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.parameters.json",
              "contents": "\"[\\n  \\\"a\\\",\\n  \\\"b\\\",\\n  \\\"msg1\\\",\\n  \\\"msg2\\\"\\n]\""
            },
            {
              "name": "canonical.sqlNormalized.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.sqlNormalized.json",
              "contents": "\"[]\""
            },
            {
              "name": "canonical.sqlTables.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/canonical.sqlTables.json",
              "contents": "\"[]\""
            },
            {
              "name": "classMap.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/classMap.json",
              "contents": "\"[\\n  {\\n    \\\"name\\\": \\\"selfHeal project\\\",\\n    \\\"type\\\": \\\"package\\\",\\n    \\\"children\\\": [\\n      {\\n        \\\"name\\\": \\\"ukm\\\",\\n        \\\"type\\\": \\\"package\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"type\\\": \\\"class\\\",\\n            \\\"name\\\": \\\"yt\\\",\\n            \\\"children\\\": [\\n              {\\n                \\\"type\\\": \\\"function\\\",\\n                \\\"name\\\": \\\"helpFn\\\",\\n                \\\"static\\\": true,\\n                \\\"location\\\": \\\"ukm\\\\\\\\yt.js:1\\\"\\n              }\\n            ]\\n          }\\n        ]\\n      },\\n      {\\n        \\\"type\\\": \\\"class\\\",\\n        \\\"name\\\": \\\"app\\\",\\n        \\\"children\\\": [\\n          {\\n            \\\"type\\\": \\\"function\\\",\\n            \\\"name\\\": \\\"add\\\",\\n            \\\"static\\\": true,\\n            \\\"location\\\": \\\"app.js:3\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"function\\\",\\n            \\\"name\\\": \\\"subtract\\\",\\n            \\\"static\\\": true,\\n            \\\"location\\\": \\\"app.js:7\\\"\\n          }\\n        ]\\n      }\\n    ]\\n  }\\n]\""
            },
            {
              "name": "metadata.json",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/metadata.json",
              "contents": "\"{\\n  \\\"client\\\": {\\n    \\\"name\\\": \\\"appmap-node\\\",\\n    \\\"version\\\": \\\"2.24.3\\\",\\n    \\\"url\\\": \\\"https://github.com/getappmap/appmap-node\\\"\\n  },\\n  \\\"language\\\": {\\n    \\\"name\\\": \\\"javascript\\\",\\n    \\\"engine\\\": \\\"Node.js\\\",\\n    \\\"version\\\": \\\"v20.17.0\\\"\\n  },\\n  \\\"app\\\": \\\"selfHeal project\\\",\\n  \\\"recorder\\\": {\\n    \\\"type\\\": \\\"process\\\",\\n    \\\"name\\\": \\\"process\\\"\\n  },\\n  \\\"name\\\": \\\"2024-10-10T14:50:55.890Z\\\"\\n}\""
            },
            {
              "name": "mtime",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/mtime",
              "contents": "\"1728571856137.0874\""
            },
            {
              "name": "version",
              "type": "file",
              "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z/version",
              "contents": "\"1.4.0\""
            }
          ]
        },
        {
          "name": "2024-10-10T14-50-55.890Z.appmap.json",
          "type": "file",
          "path": "temp-repo/selfhealjs/process/2024-10-10T14-50-55.890Z.appmap.json",
          "contents": "\"{\\n  \\\"events\\\": [\\n    {\\n      \\\"event\\\": \\\"call\\\",\\n      \\\"id\\\": 1,\\n      \\\"thread_id\\\": 0,\\n      \\\"method_id\\\": \\\"add\\\",\\n      \\\"static\\\": true,\\n      \\\"parameters\\\": [\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"5\\\",\\n          \\\"name\\\": \\\"a\\\"\\n        },\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"3\\\",\\n          \\\"name\\\": \\\"b\\\"\\n        }\\n      ],\\n      \\\"defined_class\\\": \\\"app\\\",\\n      \\\"path\\\": \\\"app.js\\\",\\n      \\\"lineno\\\": 3\\n    },\\n    {\\n      \\\"event\\\": \\\"return\\\",\\n      \\\"thread_id\\\": 0,\\n      \\\"id\\\": 2,\\n      \\\"parent_id\\\": 1,\\n      \\\"return_value\\\": {\\n        \\\"class\\\": \\\"Number\\\",\\n        \\\"value\\\": \\\"8\\\"\\n      },\\n      \\\"elapsed\\\": 0.00011809996794909239\\n    },\\n    {\\n      \\\"event\\\": \\\"call\\\",\\n      \\\"id\\\": 3,\\n      \\\"thread_id\\\": 0,\\n      \\\"method_id\\\": \\\"subtract\\\",\\n      \\\"static\\\": true,\\n      \\\"parameters\\\": [\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"5\\\",\\n          \\\"name\\\": \\\"a\\\"\\n        },\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"2\\\",\\n          \\\"name\\\": \\\"b\\\"\\n        }\\n      ],\\n      \\\"defined_class\\\": \\\"app\\\",\\n      \\\"path\\\": \\\"app.js\\\",\\n      \\\"lineno\\\": 7\\n    },\\n    {\\n      \\\"event\\\": \\\"return\\\",\\n      \\\"thread_id\\\": 0,\\n      \\\"id\\\": 4,\\n      \\\"parent_id\\\": 3,\\n      \\\"return_value\\\": {\\n        \\\"class\\\": \\\"Number\\\",\\n        \\\"value\\\": \\\"3\\\"\\n      },\\n      \\\"elapsed\\\": 0.00022220006212592125\\n    },\\n    {\\n      \\\"event\\\": \\\"call\\\",\\n      \\\"id\\\": 5,\\n      \\\"thread_id\\\": 0,\\n      \\\"method_id\\\": \\\"subtract\\\",\\n      \\\"static\\\": true,\\n      \\\"parameters\\\": [\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"15\\\",\\n          \\\"name\\\": \\\"a\\\"\\n        },\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"2\\\",\\n          \\\"name\\\": \\\"b\\\"\\n        }\\n      ],\\n      \\\"defined_class\\\": \\\"app\\\",\\n      \\\"path\\\": \\\"app.js\\\",\\n      \\\"lineno\\\": 7\\n    },\\n    {\\n      \\\"event\\\": \\\"return\\\",\\n      \\\"thread_id\\\": 0,\\n      \\\"id\\\": 6,\\n      \\\"parent_id\\\": 5,\\n      \\\"return_value\\\": {\\n        \\\"class\\\": \\\"Number\\\",\\n        \\\"value\\\": \\\"13\\\"\\n      },\\n      \\\"elapsed\\\": 0.000019099912606179714\\n    },\\n    {\\n      \\\"event\\\": \\\"call\\\",\\n      \\\"id\\\": 7,\\n      \\\"thread_id\\\": 0,\\n      \\\"method_id\\\": \\\"helpFn\\\",\\n      \\\"static\\\": true,\\n      \\\"parameters\\\": [\\n        {\\n          \\\"class\\\": \\\"String\\\",\\n          \\\"value\\\": \\\"'hello'\\\",\\n          \\\"name\\\": \\\"msg1\\\"\\n        },\\n        {\\n          \\\"class\\\": \\\"String\\\",\\n          \\\"value\\\": \\\"'world'\\\",\\n          \\\"name\\\": \\\"msg2\\\"\\n        }\\n      ],\\n      \\\"defined_class\\\": \\\"yt\\\",\\n      \\\"path\\\": \\\"ukm\\\\\\\\yt.js\\\",\\n      \\\"lineno\\\": 1\\n    },\\n    {\\n      \\\"event\\\": \\\"return\\\",\\n      \\\"thread_id\\\": 0,\\n      \\\"id\\\": 8,\\n      \\\"parent_id\\\": 7,\\n      \\\"return_value\\\": {\\n        \\\"class\\\": \\\"String\\\",\\n        \\\"value\\\": \\\"'hello world'\\\"\\n      },\\n      \\\"elapsed\\\": 0.00005209993105381727\\n    },\\n    {\\n      \\\"event\\\": \\\"call\\\",\\n      \\\"id\\\": 9,\\n      \\\"thread_id\\\": 0,\\n      \\\"method_id\\\": \\\"add\\\",\\n      \\\"static\\\": true,\\n      \\\"parameters\\\": [\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"4\\\",\\n          \\\"name\\\": \\\"a\\\"\\n        },\\n        {\\n          \\\"class\\\": \\\"Number\\\",\\n          \\\"value\\\": \\\"3\\\",\\n          \\\"name\\\": \\\"b\\\"\\n        }\\n      ],\\n      \\\"defined_class\\\": \\\"app\\\",\\n      \\\"path\\\": \\\"app.js\\\",\\n      \\\"lineno\\\": 3\\n    },\\n    {\\n      \\\"event\\\": \\\"return\\\",\\n      \\\"thread_id\\\": 0,\\n      \\\"id\\\": 10,\\n      \\\"parent_id\\\": 9,\\n      \\\"return_value\\\": {\\n        \\\"class\\\": \\\"Number\\\",\\n        \\\"value\\\": \\\"7\\\"\\n      },\\n      \\\"elapsed\\\": 0.00000800006091594696\\n    }\\n  ],\\n  \\\"version\\\": \\\"1.12\\\",\\n  \\\"metadata\\\": {\\n    \\\"client\\\": {\\n      \\\"name\\\": \\\"appmap-node\\\",\\n      \\\"version\\\": \\\"2.24.3\\\",\\n      \\\"url\\\": \\\"https://github.com/getappmap/appmap-node\\\"\\n    },\\n    \\\"language\\\": {\\n      \\\"name\\\": \\\"javascript\\\",\\n      \\\"engine\\\": \\\"Node.js\\\",\\n      \\\"version\\\": \\\"v20.17.0\\\"\\n    },\\n    \\\"app\\\": \\\"selfHeal project\\\",\\n    \\\"recorder\\\": {\\n      \\\"type\\\": \\\"process\\\",\\n      \\\"name\\\": \\\"process\\\"\\n    },\\n    \\\"name\\\": \\\"2024-10-10T14:50:55.890Z\\\"\\n  },\\n  \\\"classMap\\\": [\\n    {\\n      \\\"name\\\": \\\"selfHeal project\\\",\\n      \\\"type\\\": \\\"package\\\",\\n      \\\"children\\\": [\\n        {\\n          \\\"name\\\": \\\"ukm\\\",\\n          \\\"type\\\": \\\"package\\\",\\n          \\\"children\\\": [\\n            {\\n              \\\"type\\\": \\\"class\\\",\\n              \\\"name\\\": \\\"yt\\\",\\n              \\\"children\\\": [\\n                {\\n                  \\\"type\\\": \\\"function\\\",\\n                  \\\"name\\\": \\\"helpFn\\\",\\n                  \\\"static\\\": true,\\n                  \\\"location\\\": \\\"ukm\\\\\\\\yt.js:1\\\"\\n                }\\n              ]\\n            }\\n          ]\\n        },\\n        {\\n          \\\"type\\\": \\\"class\\\",\\n          \\\"name\\\": \\\"app\\\",\\n          \\\"children\\\": [\\n            {\\n              \\\"type\\\": \\\"function\\\",\\n              \\\"name\\\": \\\"add\\\",\\n              \\\"static\\\": true,\\n              \\\"location\\\": \\\"app.js:3\\\"\\n            },\\n            {\\n              \\\"type\\\": \\\"function\\\",\\n              \\\"name\\\": \\\"subtract\\\",\\n              \\\"static\\\": true,\\n              \\\"location\\\": \\\"app.js:7\\\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}\""
        }
      ]
    },
    {
      "name": "quickheal.js",
      "type": "file",
      "path": "temp-repo/selfhealjs/quickheal.js",
      "contents": "\"const fs = require('fs');\\nconst path = require('path');\\nconst { GoogleGenerativeAI } = require('@google/generative-ai');\\n\\n// List of API keys\\nconst apiKeys = [\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyDuMVRujmPygn0g1QxI-a8CUEZ9gu-Q778',\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyD-yA6Mg6tLYaRLFwmfis2g41-ONx-lSzc'\\n];\\n\\nlet currentKeyIndex = 0;\\n\\n// Function to get the next API key\\nconst getNextApiKey = () => {\\n    currentKeyIndex = (currentKeyIndex + 1) % apiKeys.length;\\n    return apiKeys[currentKeyIndex];\\n};\\n\\n// Function to rotate API keys if --new flag is used\\nconst rotateApiKeyIfNeeded = () => {\\n    if (process.argv.includes('--new')) {\\n        currentKeyIndex = (currentKeyIndex + 1) % apiKeys.length;\\n    }\\n};\\n\\n// Function to ask AI for analysis\\nasync function askAI(question) {\\n    rotateApiKeyIfNeeded(); // Rotate key if --new flag is present\\n    const apiKey = apiKeys[currentKeyIndex];\\n\\n    try {\\n        const genAI = new GoogleGenerativeAI(apiKey);\\n        const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\\n        const chat = model.startChat();\\n        console.log('Asking AI...');\\n        const result = await chat.sendMessage(question);\\n\\n        if (typeof result.response.text === 'function') {\\n            return await result.response.text();\\n        } else {\\n            throw new Error('Unexpected response format.');\\n        }\\n    } catch (error) {\\n        console.error(`Error with API key ${apiKey}:`, error.message);\\n    }\\n}\\n\\n// Function to analyze error\\nasync function analyzeError(scriptPath, errorMessage) {\\n    const code = fs.readFileSync(scriptPath, 'utf8').split('\\\\n');\\n    const dependencies = await gatherDependencies(scriptPath);\\n\\n    const formattedCode = code.map((line) => line).join('\\\\n'); // No line numbers here\\n    const formattedDependencies = dependencies.map(dep => {\\n        const depLines = dep.content.split('\\\\n').map(line => line).join('\\\\n');\\n        return `**${dep.path}:**\\\\n\\\\`\\\\`\\\\`javascript\\\\n${depLines}\\\\n\\\\`\\\\`\\\\``;\\n    }).join('\\\\n\\\\n');\\n\\n    const question = `\\n### Code Analysis Request\\n\\nThe following JavaScript code has an error:\\n\\n#### Code from **${scriptPath}**:\\n\\\\`\\\\`\\\\`javascript\\n${formattedCode}\\n\\\\`\\\\`\\\\`\\n\\n#### Dependencies:\\n${formattedDependencies}\\n\\n#### Error Message:\\n\\\"${errorMessage}\\\"\\n\\n---\\n\\nPlease identify the root cause of the error and suggest a fix. Include the file name and line number in your analysis, and provide a corrected code block without line numbers for easy copying.\\n`;\\n\\n    return await askAI(question);\\n}\\n\\n\\n// Function to gather dependencies\\nasync function gatherDependencies(scriptPath) {\\n    const code = fs.readFileSync(scriptPath, 'utf8');\\n    const dependencies = [];\\n    \\n    const regex = /(?:require\\\\(['\\\"`])([^'\\\"`]+)(?:['\\\"`]\\\\))|(?:import\\\\s+(?:\\\\w+|\\\\*\\\\s+as\\\\s+\\\\w+|{[^}]+})\\\\s+from\\\\s+['\\\"`]([^'\\\"`]+)['\\\"`])/g;\\n    let match;\\n    while ((match = regex.exec(code)) !== null) {\\n        const depPath = match[1] || match[2];\\n        const fullPath = path.resolve(path.dirname(scriptPath), depPath + '.js');\\n        if (fs.existsSync(fullPath)) {\\n            const content = fs.readFileSync(fullPath, 'utf8');\\n            dependencies.push({ path: fullPath, content });\\n        }\\n    }\\n    \\n    return dependencies;\\n}\\n\\n// Main function\\nasync function main() {\\n    const scriptPath = path.join(__dirname, 'app.js'); // Change this to your script\\n    let errorMessage = null;\\n\\n    try {\\n        // Attempt to run the script (or any specific logic you want to test)\\n        require(scriptPath); // This will throw if there's an error in app.js\\n    } catch (error) {\\n        errorMessage = error.message; // Capture the error message\\n        console.error(`Caught an error: ${errorMessage}`);\\n    }\\n\\n    // If an error occurred, analyze it\\n    if (errorMessage) {\\n        const aiResponse = await analyzeError(scriptPath, errorMessage);\\n        console.log('\\\\n--- AI Response ---\\\\n');\\n        console.log(aiResponse);\\n    } else {\\n        console.log('Script executed successfully without errors.');\\n    }\\n}\\n\\nmain();\\n\""
    },
    {
      "name": "selfheal.js",
      "type": "file",
      "path": "temp-repo/selfhealjs/selfheal.js",
      "contents": "\"const { exec } = require('child_process'); \\nconst fs = require('fs');\\nconst path = require('path');\\nconst { GoogleGenerativeAI } = require('@google/generative-ai');\\n\\nconst apiKeys = [\\n    'AIzaSyDgeZ-JVfUuVouEoDv_FxlPfCuxz6LeVyw',\\n    'AIzaSyDuMVRujmPygn0g1QxI-a8CUEZ9gu-Q778',\\n    'AIzaSyCprWxBmsoxPDcA0OTsYGOOtYVd_51J5po',\\n    'AIzaSyD-yA6Mg6tLYaRLFwmfis2g41-ONx-lSzc'\\n];\\n\\nlet currentKeyIndex = 0;\\nlet chatSession; // Variable to hold the current AI chat session\\n\\nconst getNextApiKey = () => {\\n    currentKeyIndex = (currentKeyIndex + 1) % apiKeys.length;\\n    return apiKeys[currentKeyIndex];\\n};\\n\\nasync function askQuestion(question) {\\n    if (chatSession) {\\n        chatSession.close(); // Close the old session if it exists\\n    }\\n\\n    const apiKey = getNextApiKey();\\n    console.log(`Using API key: ${apiKey}`);\\n    \\n    try {\\n        const genAI = new GoogleGenerativeAI(apiKey);\\n        const model = genAI.getGenerativeModel({ model: 'gemini-pro' });\\n        chatSession = model.startChat(); // Start a new chat session\\n        console.log('Asking AI:', question);\\n        const result = await chatSession.sendMessage(question);\\n\\n        if (typeof result.response.text === 'function') {\\n            return await result.response.text();\\n        } else {\\n            throw new Error('Unexpected response format.');\\n        }\\n    } catch (error) {\\n        console.error(`Error with API key ${apiKey}:`, error.message);\\n    }\\n}\\n\\nasync function getAIHelp(scriptPath, errorMessage, currentCode) {\\n    const question = `The following JavaScript code has an error:\\n\\nHere is the current code:\\n\\\\`\\\\`\\\\`javascript\\n${currentCode}\\n\\\\`\\\\`\\\\`\\n\\nThe error message is: \\\"${errorMessage}\\\". \\n\\nPlease analyze the code and suggest modifications to fix the error while providing a brief explanation of actions taken. Format your output as:\\n\\\\`\\\\`\\\\`actions\\n[LIST OF ACTIONS]\\n\\\\`\\\\`\\\\`\\n\\\\`\\\\`\\\\`modified\\n[YOUR MODIFIED CODE HERE]\\n\\\\`\\\\`\\\\``;\\n\\n    return await askQuestion(question);\\n}\\n\\nasync function fixIssues(scriptPath, errorMessage) {\\n    const currentCode = fs.readFileSync(scriptPath, 'utf8');\\n    const aiResponse = await getAIHelp(scriptPath, errorMessage, currentCode);\\n    \\n    const actionsMatch = aiResponse.match(/```actions\\\\n([\\\\s\\\\S]*?)\\\\n```/);\\n    const modifiedCodeMatch = aiResponse.match(/```modified\\\\n([\\\\s\\\\S]*?)\\\\n```/);\\n\\n    if (actionsMatch && modifiedCodeMatch) {\\n        const actions = actionsMatch[1].trim().split('\\\\n').map(action => action.trim()).filter(Boolean);\\n        const modifiedCode = modifiedCodeMatch[1].trim();\\n\\n        // Log the suggested actions\\n        console.log('Suggested Actions:');\\n        actions.forEach(action => console.log(`- ${action}`));\\n\\n        // Apply modifications to the relevant file(s)\\n        const modifiedFilePath = path.join(__dirname, 'ukm', 'yt.js'); // Path to the file to be modified\\n        fs.writeFileSync(modifiedFilePath, modifiedCode);\\n        console.log(`File modified: ${modifiedFilePath}`);\\n        console.log('New code:\\\\n', modifiedCode);\\n    } else {\\n        console.error('Could not parse the AI response correctly.');\\n        console.error('AI response was:', aiResponse);\\n    }\\n}\\n\\n\\nasync function runScript(scriptPath) {\\n    return new Promise((resolve, reject) => {\\n        exec(`node ${scriptPath}`, (error, stdout, stderr) => {\\n            if (error) {\\n                reject({ error, stdout, stderr });\\n            } else {\\n                resolve(stdout);\\n            }\\n        });\\n    });\\n}\\n\\nasync function selfHealing(scriptPath) {\\n    let attemptCount = 0;\\n    while (attemptCount < 3) {\\n        try {\\n            await runScript(scriptPath);\\n            console.log(`Project ran successfully: ${scriptPath}`);\\n            return; // Exit if successful\\n        } catch ({ stdout, stderr }) {\\n            console.error('Error running script:', stderr || stdout);\\n            await fixIssues(scriptPath, stderr || stdout);\\n            return; // Exit after fixing the issue once\\n        }\\n    }\\n}\\n\\nasync function main() {\\n    const args = process.argv.slice(2);\\n    const newConversation = args.includes('--new');\\n    \\n    const scriptPath = path.join(__dirname, 'app.js'); // Specify the script to fix\\n    await selfHealing(scriptPath);\\n    console.log('Self-healing process completed.');\\n    \\n    if (newConversation) {\\n        console.log('Starting a new conversation with the AI.');\\n    }\\n}\\n\\nmain();\\n\""
    },
    {
      "name": "services",
      "type": "directory",
      "children": [
        {
          "name": "PaymentProcessor.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/services/PaymentProcessor.js",
          "contents": "\"class PaymentProcessor {\\n    processPayment(order, amount) {\\n        throw new Error(\\\"processPayment() must be implemented\\\");\\n    }\\n}\\n\\nmodule.exports = PaymentProcessor;\\n\""
        }
      ]
    },
    {
      "name": "tests",
      "type": "directory",
      "children": [
        {
          "name": "app.test.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/tests/app.test.js",
          "contents": "\"const assert = require('assert');\\nconst Product = require('../models/Product');\\nconst Customer = require('../models/Customer');\\nconst Order = require('../models/Order');\\nconst CreditCardPaymentProcessor = require('../services/CreditCardPaymentProcessor');\\n\\ndescribe('Order Creation and Payment Processing', function() {\\n    it('should create an order with products and process payment', function() {\\n        // Create products\\n        const product1 = new Product(1, 'Laptop', 999.99);\\n        const product2 = new Product(2, 'Mouse', 19.99);\\n\\n        // Create a customer\\n        const customer = new Customer(1, 'John Doe', 'john.doe@example.com');\\n\\n        // Create an order and add products\\n        const order = new Order(1001, customer);\\n        order.addProduct(product1);\\n        order.addProduct(product2);\\n\\n        // Verify order summary\\n        const expectedSummary = 'Order #1001 for John Doe: 2 items, Total: $1019.98';\\n        assert.strictEqual(order.getOrderSummary(), expectedSummary);\\n\\n        // Process payment\\n        const paymentProcessor = new CreditCardPaymentProcessor();\\n        const paymentResult = paymentProcessor.processPayment(order, 1019.98);\\n\\n        // Verify payment processing\\n        assert.strictEqual(paymentResult, 'Payment of $1019.98 processed for order #1001');\\n    });\\n});\\n\""
        }
      ]
    },
    {
      "name": "ukm",
      "type": "directory",
      "children": [
        {
          "name": "yt.js",
          "type": "file",
          "path": "temp-repo/selfhealjs/ukm/yt.js",
          "contents": "\"function helpFn(msg1, msg2) {\\n  return [msg1, msg2].join(\\\" \\\");\\n}\\nmodule.exports = {helpFn};\""
        }
      ]
    }
  ]
}